





Program("logalloc-replay")

SOURCES += [
    "/mfbt/Assertions.cpp",
    "/mfbt/Poison.cpp",
    "/mfbt/RandomNum.cpp",
    "/mfbt/RefCounted.cpp",
    "/mfbt/TaggedAnonymousMemory.cpp",
    "/mfbt/Unused.cpp",
    "/mozglue/misc/StackWalk.cpp",
    "Replay.cpp",
]

if CONFIG["OS_TARGET"] == "WINNT":
    SOURCES += [
        "/mozglue/misc/ProcessType.cpp",
    ]

if CONFIG["OS_TARGET"] == "Linux":
    LDFLAGS += ["-static-libstdc++"]

if CONFIG["OS_TARGET"] == "Darwin":
    
    
    
    SOURCES["Replay.cpp"].flags += ["-Wno-unguarded-availability-new"]
elif CONFIG["OS_TARGET"] == "Android":
    
    
    SOURCES["Replay.cpp"].flags += ["-Wno-unguarded-availability"]


if CONFIG["MOZ_REPLACE_MALLOC_STATIC"] and (CONFIG["MOZ_DMD"] or CONFIG["MOZ_PHC"]):
    UNIFIED_SOURCES += [
        "/mfbt/HashFunctions.cpp",
        "/mfbt/JSONWriter.cpp",
    ]

if CONFIG["OS_ARCH"] == "WINNT":
    OS_LIBS += [
        "advapi32",
        "dbghelp",
    ]

if CONFIG["MOZ_LINKER"] and CONFIG["MOZ_WIDGET_TOOLKIT"] == "android":
    LOCAL_INCLUDES += [
        "/mozglue/linker",
    ]
    DEFINES["__wrap_dladdr"] = "dladdr"


if CONFIG["MOZ_BUILD_APP"] == "memory":
    EXPORTS.mozilla += [
        "/mozglue/misc/StackWalk.h",
    ]

if CONFIG["MOZ_BUILD_APP"] == "memory" or CONFIG["MOZ_REPLACE_MALLOC_STATIC"]:
    UNIFIED_SOURCES += [
        "/mfbt/double-conversion/double-conversion/bignum-dtoa.cc",
        "/mfbt/double-conversion/double-conversion/bignum.cc",
        "/mfbt/double-conversion/double-conversion/cached-powers.cc",
        "/mfbt/double-conversion/double-conversion/double-to-string.cc",
        "/mfbt/double-conversion/double-conversion/fast-dtoa.cc",
        "/mfbt/double-conversion/double-conversion/fixed-dtoa.cc",
        "/mfbt/double-conversion/double-conversion/string-to-double.cc",
        "/mfbt/double-conversion/double-conversion/strtod.cc",
        "/mozglue/misc/Printf.cpp",
    ]

LOCAL_INCLUDES += [
    "/memory/build",
]


USE_LIBS += [
    "memory",
]


DEFINES["IMPL_MFBT"] = True

DEFINES["MOZ_SUPPORT_LEAKCHECKING"] = True

OS_LIBS += CONFIG["LIBATOMIC_LIBS"]

OS_LIBS += CONFIG["DL_LIBS"]

DisableStlWrapping()

include("/mozglue/build/replace_malloc.mozbuild")
include("/mozglue/misc/timestamp.mozbuild")


if not CONFIG["MOZ_CODE_COVERAGE"] and not CONFIG["CROSS_COMPILE"]:
    if not CONFIG["MOZ_REPLACE_MALLOC_STATIC"]:
        if CONFIG["OS_TARGET"] == "WINNT":
            logalloc_var = "MOZ_REPLACE_MALLOC_LIB"
        elif CONFIG["OS_TARGET"] == "Darwin":
            logalloc_var = "DYLD_INSERT_LIBRARIES"
        else:
            logalloc_var = "LD_PRELOAD"
        logalloc = f"--logalloc={logalloc_var}={OBJDIR}/../{CONFIG['DLL_PREFIX']}logalloc{CONFIG['DLL_SUFFIX']}"
    else:
        logalloc = "--logalloc="

    LegacyTest(
        "test_logalloc.sh",
        logalloc,
        f"!/{FINAL_TARGET}/{PROGRAM}{CONFIG['BIN_SUFFIX']}",
        ".",
        f"%{CONFIG['PYTHON3']}",
        depends=[
            f"!/{FINAL_TARGET}/{PROGRAM}{CONFIG['BIN_SUFFIX']}",
            "logalloc_munge.py",
            "expected_output_minimal.log",
            "replay.log",
        ],
    )
